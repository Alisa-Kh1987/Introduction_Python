# üìå–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ: –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ —Ç.–ø. –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä. 
# üìå–£ –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–µ—Ç–æ–¥—ã birthday –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –Ω–∞ –≥–æ–¥, 
# full_name –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª–Ω–æ–≥–æ –§–ò–û –∏ —Ç.–ø. –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä. 
# üìå–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –≤–æ–∑—Ä–∞—Å—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –Ω–æ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç.



import random


class Human:
    def __init__(self, last_name: str, first_name: str, age: int, patronymic: str = None):
        self._last_name = last_name
        self._first_name = first_name
        self._patronymic = patronymic
        self._age = age

    def birthday(self):
        self._age +=1

    def get_age(self):
        return self._age
    
    def full_name(self):
        return (f'{self._last_name}{self._first_name}{"" if self._patronymic is None else (self._patronymic + " ")} –µ–º—É '
                f'{self._age} –ª–µ—Ç')
    
# alisa = Human('–•—É–¥—è–∫–æ–≤–∞', '–ê–ª–∏—Å–∞', 35, patronymic='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞')
# stone = Human('–ü–∞–Ω—Ñ–∏–ª–æ–≤', '–ö–∏—Ä–∏–ª–ª', 39)

# print(stone.full_name())
# print(alisa.full_name())
# stone.birthday()
# print(stone.full_name())

class Employee(Human):
    def __init__(self, last_name, first_name, age, patronymic):
        super().__init__(last_name, first_name, age, patronymic)
        self.u_id = str(random.randint(1, 999999)).zfill(0)
        self.lvl_access = int(self.u_id)%7

alisa = Employee('–•—É–¥—è–∫–æ–≤–∞', '–ê–ª–∏—Å–∞', 35, '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞')
print(alisa.u_id)
print(alisa.lvl_access)
    
